var documenterSearchIndex = {"docs":
[{"location":"#PBWDeformations","page":"PBWDeformations.jl","title":"PBWDeformations","text":"","category":"section"},{"location":"#Introduction","page":"PBWDeformations.jl","title":"Introduction","text":"","category":"section"},{"location":"","page":"PBWDeformations.jl","title":"PBWDeformations.jl","text":"Documentation for PBWDeformations.","category":"page"},{"location":"#Features","page":"PBWDeformations.jl","title":"Features","text":"","category":"section"},{"location":"","page":"PBWDeformations.jl","title":"PBWDeformations.jl","text":"todo","category":"page"},{"location":"#Installation","page":"PBWDeformations.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"PBWDeformations.jl","title":"PBWDeformations.jl","text":"todo","category":"page"},{"location":"#Outline","page":"PBWDeformations.jl","title":"Outline","text":"","category":"section"},{"location":"","page":"PBWDeformations.jl","title":"PBWDeformations.jl","text":"","category":"page"},{"location":"#main-index","page":"PBWDeformations.jl","title":"Index","text":"","category":"section"},{"location":"","page":"PBWDeformations.jl","title":"PBWDeformations.jl","text":"","category":"page"},{"location":"util/","page":"Util functions","title":"Util functions","text":"CurrentModule = PBWDeformations","category":"page"},{"location":"util/#Utility-functions","page":"Util functions","title":"Utility functions","text":"","category":"section"},{"location":"util/","page":"Util functions","title":"Util functions","text":"Modules = [PBWDeformations]\nPages   = [\"Util.jl\"]","category":"page"},{"location":"util/#PBWDeformations.flatten-Union{Tuple{Array{Vector{T}, 1}}, Tuple{T}} where T","page":"Util functions","title":"PBWDeformations.flatten","text":"flatten(a::Vector{Vector{T}}) where {T}\n\nReturns a vector of all elements of elements of a.\n\nExample\n\njulia> flatten([[1],[],[2,3,4],[5],[]])\n5-element Vector{Any}:\n 1\n 2\n 3\n 4\n 5\n\n\n\n\n\n","category":"method"},{"location":"util/#PBWDeformations.groupBy-Union{Tuple{Vector{T}}, Tuple{T}} where T","page":"Util functions","title":"PBWDeformations.groupBy","text":"groupBy(a::Vector{T}; eq=(==)) where {T}\n\nReturns a vector containing the elements of a grouped into subvectors of consecutive equal elements.\n\nExamples\n\njulia> groupBy([1,1,2,2,2,2,3,1,4,4])\n5-element Vector{Vector{Int64}}:\n [1, 1]\n [2, 2, 2, 2]\n [3]\n [1]\n [4, 4]\n\njulia> groupBy([i for i in -5:5]; eq=((x, y) -> sign(x) == sign(y)))\n3-element Vector{Vector{Int64}}:\n [-5, -4, -3, -2, -1]\n [0]\n [1, 2, 3, 4, 5]\n\n\n\n\n\n","category":"method"},{"location":"util/#PBWDeformations.is_valid_dynkin-Tuple{Char, Int64}","page":"Util functions","title":"PBWDeformations.is_valid_dynkin","text":"is_valid_dynkin(dynkin::Char, n::Int)\n\nReturns true, if there given parameters uniquely define a dynkin diagram, i.e. are of one of the forms\n\nA_n for n geq 1,\nB_n for n geq 2,\nC_n for n geq 2,\nD_n for n geq 4,\nE_5, E_6, E_7,\nF_4,\nG_2.\n\nExamples\n\njulia> is_valid_dynkin('A', 2)\ntrue\n\njulia> is_valid_dynkin('F', 4)\ntrue\n\njulia> is_valid_dynkin('D', 3)\nfalse\n\n\n\n\n\n","category":"method"},{"location":"util/#PBWDeformations.std_basis-Tuple{Int64, Int64}","page":"Util functions","title":"PBWDeformations.std_basis","text":"std_basis(i::Int, n::Int)\nstd_basis(::Type{T}, i::Int, n::Int) where {T <: Number}\n\nReturns the i-th standard basis vector of dimension n. If supplied with a type, the vector is of that type, otherwise it is of type Int.\n\nExamples\n\njulia> std_basis(1, 3)\n3-element Vector{Int64}:\n 1\n 0\n 0\n\njulia> std_basis(Float64,2,4)\n4-element Vector{Float64}:\n 0.0\n 1.0\n 0.0\n 0.0\n\n\n\n\n\n","category":"method"},{"location":"util/#PBWDeformations.ur_proper_triag_entries-Union{Tuple{Matrix{T}}, Tuple{T}} where T","page":"Util functions","title":"PBWDeformations.ur_proper_triag_entries","text":"ur_proper_triag_entries(M::Matrix{T}) where {T}\n\nReturns the entries of the proper upper triangular part of M in row-major order.\n\nExamples\n\njulia> ur_proper_triag_entries([1 2 3;4 5 6;7 8 9])\n3-element Vector{Int64}:\n 2\n 3\n 6\n\n\n\n\n\n","category":"method"},{"location":"util/#PBWDeformations.ur_triag_entries-Union{Tuple{Matrix{T}}, Tuple{T}} where T","page":"Util functions","title":"PBWDeformations.ur_triag_entries","text":"ur_triag_entries(M::Matrix{T}) where {T}\n\nReturns the entries of the upper triangular part of M in row-major order.\n\nExamples\n\njulia> ur_triag_entries([1 2 3;4 5 6;7 8 9])\n6-element Vector{Int64}:\n 1\n 2\n 3\n 5\n 6\n 9\n\n\n\n\n\n","category":"method"},{"location":"smash_product_lie/","page":"Smash products","title":"Smash products","text":"CurrentModule = PBWDeformations\nDocTestSetup  = quote\n    using PBWDeformations\n    using Oscar\nend","category":"page"},{"location":"smash_product_lie/#Smash-products","page":"Smash products","title":"Smash products","text":"","category":"section"},{"location":"smash_product_lie/#Constructors","page":"Smash products","title":"Constructors","text":"","category":"section"},{"location":"smash_product_lie/#General-/-GAP-case","page":"Smash products","title":"General / GAP case","text":"","category":"section"},{"location":"smash_product_lie/","page":"Smash products","title":"Smash products","text":"smash_product_lie","category":"page"},{"location":"smash_product_lie/#PBWDeformations.smash_product_lie","page":"Smash products","title":"PBWDeformations.smash_product_lie","text":"smash_product_lie(coeff_ring::Ring, symbL::Vector{Symbol}, symbV::Vector{Symbol}, struct_const_L, struct_const_V)\n\nConstructs the smash product over the coefficient ring coeff_ring using the structure constants struct_const_L and struct_const_V, and using symbL and symbV as symbols for the respective generators of the Lie algebra and the module.\n\n\n\n\n\nsmash_product_lie(coeff_ring::Ring, symbL::Vector{String}, symbV::Vector{String}, struct_const_L, struct_const_V)\n\nThe same as the other method with structure constants, but takes strings instead of symbols to name the generators.\n\n\n\n\n\nsmash_product_lie(coeff_ring::Ring, dynkin::Char, n::Int, lambda::Vector{Int})\n\nConstructs the smash product of the abstract semisimple Lie algebra given by dynkin and n and the highest weight module with weight lambda over the coefficient ring coeff_ring.\n\nExample\n\njulia> smash_product_lie(QQ, 'A', 1, [1])\n(Lie Algebra Smash Product with basis x_1, x_2, x_3, v_1, v_2 over Rational Field, (QuadraticQuoAlgebraElem{fmpq}[x_1, x_2, x_3], QuadraticQuoAlgebraElem{fmpq}[v_1, v_2]))\n\n\n\n\n\n","category":"function"},{"location":"smash_product_lie/","page":"Smash products","title":"Smash products","text":"<!– ### SO case","category":"page"},{"location":"smash_product_lie/","page":"Smash products","title":"Smash products","text":"For the orthogonal Lie algebras so_n there is a different constructor, that results in the well-known basis of so_n given by x_i_j = E_ij - E_ji for 1 leq i  j leq n.","category":"page"},{"location":"smash_product_lie/","page":"Smash products","title":"Smash products","text":"","category":"page"},{"location":"smash_product_lie/","page":"Smash products","title":"Smash products","text":"–>","category":"page"},{"location":"smash_product_lie/#SmashProductLie-struct","page":"Smash products","title":"SmashProductLie struct","text":"","category":"section"},{"location":"smash_product_lie/","page":"Smash products","title":"Smash products","text":"SmashProductLie","category":"page"},{"location":"smash_product_lie/#PBWDeformations.SmashProductLie","page":"Smash products","title":"PBWDeformations.SmashProductLie","text":"The struct representing a Lie algebra smash product. It consists of the underlying QuadraticQuoAlgebra and some metadata.\n\n\n\n\n\n","category":"type"},{"location":"smash_product_lie/#Functions","page":"Smash products","title":"Functions","text":"","category":"section"},{"location":"smash_product_lie/","page":"Smash products","title":"Smash products","text":"The SmashProductLie struct can be used as an argument for the following functions:","category":"page"},{"location":"smash_product_lie/","page":"Smash products","title":"Smash products","text":"gens\nngens\nchange_base_ring","category":"page"}]
}
